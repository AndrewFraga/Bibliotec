
==================== FINAL INTERFACE ====================
2017-06-13 22:11:57.01097 UTC

interface main@main:Aluguel 8002
  interface hash: ebebc76f37e2b17a2cc97c1b1a97d3fc
  ABI hash: fe585ddfcfcdf8734b5f9c4724233128
  export-list hash: 9a66d1474da876d88c2a6d6c85419a2e
  orphan hash: 90cdc58faf2ea7aee8a56db99b85699a
  flag hash: 9fec89afbba470e88fe791025d6433b1
  sig of: Nothing
  used TH splices: False
  where
exports:
  Aluguel.deleteAluguelByIdR
  Aluguel.getAluguelByIdR
  Aluguel.getBuscarAluguelByDateR
  Aluguel.getBuscarAluguelByLivroIdDateR
  Aluguel.getBuscarAluguelByLivroIdR
  Aluguel.getBuscarAluguelByUsuarioIdDateR
  Aluguel.getBuscarAluguelByUsuarioIdR
  Aluguel.optionsAluguelByIdR
  Aluguel.optionsAluguelR
  Aluguel.optionsBuscarAluguelByDateR
  Aluguel.optionsBuscarAluguelByLivroIdDateR
  Aluguel.optionsBuscarAluguelByLivroIdR
  Aluguel.optionsBuscarAluguelByUsuarioIdDateR
  Aluguel.optionsBuscarAluguelByUsuarioIdR
  Aluguel.optionsDevolucaoAluguelByIdR
  Aluguel.optionsRenovacaoAluguelByIdR
  Aluguel.optionsSaidaAluguelByIdR
  Aluguel.patchDevolucaoAluguelByIdR
  Aluguel.patchRenovacaoAluguelByIdR
  Aluguel.patchSaidaAluguelByIdR
  Aluguel.postAluguelR
module dependencies: Foundation Funcs
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV
                      aeson-compat-0.3.6@aeson-compat-0.3.6-5YZK4rUKxhP8OOPFhv9dCc
                      ansi-terminal-0.6.3@ansi-terminal-0.6.3-5kYVXjMEHHrAlaHmqGutj8
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-395ZdLOcM0Y7ltaJ6rvhz2
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-7eVVX59t93gCl3XctAmuil
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      cipher-aes-0.2.11@cipher-aes-0.2.11-8lsmmv0hSMmFUsxtl3lTHe
                      clientsession-0.9.1.2@clientsession-0.9.1.2-HoXJNfRtHiHLFzVDwthBx0
                      conduit-1.2.10@conduit-1.2.10-7LSpuK7eDymFH3gxuXprIT
                      conduit-extra-1.1.16@conduit-extra-1.1.16-3pKSUheUBpdA35UaF6p73j
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cprng-aes-0.6.1@cprng-aes-0.6.1-E65zC5gFDIyD7Ch2uJqJqU
                      crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-FA7JbbMMbhEH27pAOVwcHg
                      crypto-random-0.0.9@crypto-random-0.0.9-BFfNQwJ0z3LL4M2YAih4n4
                      cryptohash-0.11.9@cryptohash-0.11.9-279ZsRS4xxhJVCdujU1Uyx
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-gTLjZi1ugRKyEEBwuxGdf
                      cryptonite-0.21@cryptonite-0.21-HIZBsFgX0eP4iYP6YdLd9f
                      css-text-0.1.2.2@css-text-0.1.2.2-2s9sdW2ugVg7tdfgLJDLs4
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.2.0@email-validate-2.2.0-9DdJbbiWN49B1rX3M24NIP
                      entropy-0.3.7@entropy-0.3.7-GVoReSVE1cZ4Y1pKgzhBYO
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-BAjxswArqb0E0N0L7J8qbL
                      http-date-0.0.6.1@http-date-0.0.6.1-5HOvcIxha088JfGZJ7KCrN
                      http-types-0.9.1@http-types-0.9.1-JfqUh6MfqqR8Kpp4vaoPhu
                      http2-1.6.3@http2-1.6.3-CCNOUEIMNPCIwgKnOg84uS integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-2nctQ8abLa4F4qppuBPWFl
                      memory-0.14.5@memory-0.14.5-1ona7ZgZyqo2N2VMnDny9U
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      monad-logger-0.3.24@monad-logger-0.3.24-G9ZPf05x6VlDKMDQKzml3b
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-4EKMGw6QfaJLMhRUSL730j
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      path-pieces-0.2.1@path-pieces-0.2.1-7jYjtDsNHN0JfYriIYgB3j
                      persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-BH5bsujW4fIGcXoM9UyYWk
                      persistent-template-2.5.2@persistent-template-2.5.2-F8gewL25fDg4mcqDivNqUq
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-FCW3vqCF2IgLr1Qc9KS5rO
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-JF0GCaCqGTSEsAmsa8Gm9e
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.13@scientific-0.3.4.13-2xII4ZQfmEWrTXn2dbZc3
                      securemem-0.1.9@securemem-0.1.9-7cBozdH7LYOGgrHRgd7B5b
                      shakespeare-2.0.13@shakespeare-2.0.13-LsVh7A19ihlHCPYj3tio0o
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-JJ9zm1wZxYIARxlVa3oQgs
                      skein-1.0.9.4@skein-1.0.9.4-1r9hT02ZzU5HeQ9SvXvQV
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-6d5jSu6VuYIIoyQixz5L7u
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-DzgXwtfU2hBCOxHTusHk9u
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-8g4RZ6XBAEz2rInjcb9qxr
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-GDgs7QP4bcBBbHxqxzRSRZ
                      wai-logger-2.3.0@wai-logger-2.3.0-7qGm9HVnBFG4aOw1Kh4171
                      warp-3.2.12@warp-3.2.12-8NkWJiglkAJ3KRAh2wZosZ
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-LhrllhD0CUxGo6ZOE9B1nx
                      yesod-1.4.5@yesod-1.4.5-KkuohOR46AGJaQebI2xaBn
                      yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA
                      yesod-form-1.4.12@yesod-form-1.4.12-4R82yM19wAsBZqBiggu31i
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-LBApvzv570iG1mLpIiASnM
                      yesod-static-1.5.2@yesod-static-1.5.2-Apz4aqm2LKc804P321bqFb
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-F8gewL25fDg4mcqDivNqUq:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-7LSpuK7eDymFH3gxuXprIT:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-7LSpuK7eDymFH3gxuXprIT:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-9DdJbbiWN49B1rX3M24NIP:Text.Email.Parser
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Array.Bitmap
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Array.Boxed
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Array.Unboxed
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Collection.Buildable
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Collection.Collection
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Collection.Element
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Collection.Keyed
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Collection.Mutable
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Numerical.Subtractive
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Primitive.Block.Base
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Primitive.Monad
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Primitive.UTF8.Base
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.String.Encoding.ASCII7
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.String.Encoding.UTF16
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.String.Encoding.UTF32
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.String.UTF8
                         foundation-0.0.9@foundation-0.0.9-Gz9rjrrCgakG00kTCOvbml:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         monad-logger-0.3.24@monad-logger-0.3.24-G9ZPf05x6VlDKMDQKzml3b:Control.Monad.Logger
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-4EKMGw6QfaJLMhRUSL730j:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Class.PersistConfig
                         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-BH5bsujW4fIGcXoM9UyYWk:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-JF0GCaCqGTSEsAmsa8Gm9e:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.13@shakespeare-2.0.13-LsVh7A19ihlHCPYj3tio0o:Text.Internal.Css
                         shakespeare-2.0.13@shakespeare-2.0.13-LsVh7A19ihlHCPYj3tio0o:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA:Yesod.Core.Class.Handler
                         yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA:Yesod.Core.Types
                         yesod-static-1.5.2@yesod-static-1.5.2-Apz4aqm2LKc804P321bqFb:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types cca8fe352d412dcafd792be797769137
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types.Internal 854bb132d6f0fbcc043a2365356b51dc
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types.ToJSON 31e13e0fbcc1628680533c9d371f5c81
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  http-types-0.9.1@http-types-0.9.1-JfqUh6MfqqR8Kpp4vaoPhu:Network.HTTP.Types.Status b1d45c624b8c67961bc811066117346d
import  -/  Foundation 70794cf1dd7eb65f8e6012373a0d2b63
  exports: 73ce260fae8f29eaed84fefbf1a7c209
  Aluguel 0625519cbcd7f1517860cf3aaa2abe3c
  AluguelDevolucao 127f4b64c9be33e2171d55ed1a8acb78
  AluguelId 9752b2ae22b71bc1f9ba0b69a5517f11
  AluguelLivro 6055d05fc1aed176bf4815ac773ab393
  AluguelPrevisao b981db158d0e2a8e39551e068f858909
  AluguelRenovacao 4f75b0566ac7a63af96617cc2624c541
  AluguelRetirada 4ad8527abb3251f124a8dfe8084e3b5e
  AluguelSaida b7f4f4883ad8d649469dae9bb4c008ae
  AluguelUsuario a3267bc73846e572ce642ce3fb8eca1f
  Handler a310d57e79abfd605656bf15570e24ea
  LivroId 6305c1a06f21aba08ba4de3993a6a1da
  UsuarioId f8bb054173e86473959070c863b470d7
  aluguelPrevisao e1a331d309216928515e14fe2bd0dfac
import  -/  Funcs 2402f84019fb09ceeb9e953b4013150c
  exports: 5c1d8a0bf50fd053189d09484ae583df
  DELETE 86dd36b6e74a32abf9369d4848dad0c2
  GET ab8c4b7d894543dab87ba97fa2ba59d4
  OPTIONS c2ab4705d527069c61913c836b3099eb
  PATCH f56c4303055bf49b3ae448bc3abe6f4b
  POST d5e7ded54f2fa2b4202d10824af95d16
  anyOriginIn 11cb7fc688f79e156c91c7af03e2c192
import  -/  persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist fe3a39fff4539f7b00d06ebe497b9c8f
import  -/  persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Class.PersistEntity 9b53e00c0944774de6d888c494872c43
import  -/  persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Class.PersistQuery a0443625c636182657a78811dabc1a54
import  -/  persistent-2.6.1@persistent-2.6.1-4CLnmYZ15jFDYzQgkRzCIM:Database.Persist.Class.PersistStore c1ac085d9fe14404ac8e1708e83e8691
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time 2005a60506050a7089ec50a535292ccc
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Days 0625fb086700e00eeabe68d7be3fc9e6
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.POSIX d107248af877060d00321d9c66f5a2b1
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.UTC a11128e40404d4167f29d45f57b1b0af
import  -/  yesod-1.4.5@yesod-1.4.5-KkuohOR46AGJaQebI2xaBn:Yesod e9085892ecdae63fde0f9ac2eb6f89dd
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA:Yesod.Core.Handler f0395cd116f061339f74fc813c1633e9
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-6nLNWHVBzVI3bUgCltXavA:Yesod.Core.Json e11e695487bcbdbf3c4eb6308e74451c
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-LBApvzv570iG1mLpIiASnM:Yesod.Persist.Core be9e13d9d70fd0775c7c65b1955335ed
c9d23323c43a90da1f9a2cb20a7eae25
  $s$WAluguelDevolucao2 ::
    GHC.Base.Maybe Data.Time.Calendar.Days.Day
    GHC.Types.~~ GHC.Base.Maybe Data.Time.Calendar.Days.Day
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
                   @ (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
                   @~ <GHC.Base.Maybe Data.Time.Calendar.Days.Day>_N) -}
619e96fe5ed87f120ff6fd84317df5ab
  $s$WAluguelLivro2 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Livro
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Livro
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Livro)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Livro)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Livro>_N) -}
15dc70a9cc8bbe476fe5c0cb0c9663d3
  $s$WAluguelPrevisao2 ::
    Data.Time.Calendar.Days.Day
    GHC.Types.~~ Data.Time.Calendar.Days.Day
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Time.Calendar.Days.Day
                   @ Data.Time.Calendar.Days.Day
                   @~ <Data.Time.Calendar.Days.Day>_N) -}
2b79a8bd0c8d537bab8b2061d97587b6
  $s$WAluguelRenovacao2 :: GHC.Types.Bool GHC.Types.~~ GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   @~ <GHC.Types.Bool>_N) -}
c201d60d0fe3cd253812256228827aea
  $s$WAluguelUsuario2 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Usuario
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Usuario
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Usuario)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Usuario)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Usuario>_N) -}
cee6aa92216e9325e98e3e1a8ca5639b
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta :: a)
                   (eta1 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
cda75deb5857d9399f80a47de18aa6ab
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Aluguel.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Aluguel.$s$fMonadHandlerHandlerT1) -}
cd113f4c9ceceed38519f60cc69d0865
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
08704ec0fe0d03cb909b67f2bf9d363e
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$dMonad ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
6ec6451623c789a09ff0aed479b64b7e
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$dMonad)
                  (Aluguel.$s$fApplicativeHandlerT_$creturn @ site)
                  (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT_$cfail
                     @ site) -}
50e883bd78cc8be3384efc46473a0ca6
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$dMonad
                   eta) -}
3f32da5bb65dd0f6919282bb247edd89
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cliftIO
                     @ site) -}
2f7aa6d0238cc9ce4a98891dd5fc81d9
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cliftIO ::
    GHC.Types.IO a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta :: GHC.Types.IO a) ->
                 let {
                   eta1 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta1)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <a>_N))) -}
cf38dd2e44d912f68206be900299985c
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cp1MonadLogger ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT -}
bbd9147122c05ffd6ef477be48c69bb6
  $s$fPersistFieldMaybe ::
    Database.Persist.Class.PersistField.PersistField
      (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
                  Aluguel.$s$fPersistFieldMaybe1
                  (Database.Persist.Class.PersistField.$fPersistFieldMaybe_$cfromPersistValue
                     @ Data.Time.Calendar.Days.Day
                     Database.Persist.Class.PersistField.$fPersistFieldDay) -}
0f9a9403be89ce7bedcc69d0066d8810
  $s$fPersistFieldMaybe1 ::
    GHC.Base.Maybe Data.Time.Calendar.Days.Day
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe Data.Time.Calendar.Days.Day) ->
                 case ds of wild {
                   GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                   GHC.Base.Just a1 -> Database.Persist.Types.Base.PersistDay a1 }) -}
cf030aa071d91f0768ead52800d6846a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Aluguel.$trModule2
                   Aluguel.$trModule1) -}
b77064d1aa9ffa37f8da9b8712be4ed3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Aluguel"#) -}
348c7e0c728c828751c8ffe2c2224efd
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
fcad31ea1c8e0e3714c47fb1018ecf0f
  deleteAluguelByIdR ::
    Foundation.AluguelId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.deleteAluguelByIdR1
                  `cast`
                (<Foundation.AluguelId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
2c80a82ec513505dcf06a0c8cc2aa143
  deleteAluguelByIdR1 ::
    Foundation.AluguelId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (aluguelId :: Foundation.AluguelId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Foundation.Aluguel
                           (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                              @ Foundation.App)
                           Aluguel.deleteAluguelByIdR4
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity
                                 Foundation.Aluguel>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           aluguelId)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Aluguel.deleteAluguelByIdR2
                   ipv }) -}
f5d5b0f274af94395207881d9bfbecea
  deleteAluguelByIdR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Aluguel.deleteAluguelByIdR3) -}
a3b103c2c035c31647ba955abbbf79b4
  deleteAluguelByIdR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 case (Data.Aeson.Encoding.Builder.encodeToBuilder
                         Data.Aeson.Types.Internal.emptyObject)
                        `cast`
                      (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status204
                   (Yesod.Core.Types.TypedContent
                      dt
                      (Yesod.Core.Types.ContentBuilder
                         nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                         (GHC.Base.Nothing @ GHC.Types.Int))) } }) -}
a025ab8878a46a63a39f1c14b56c6fac
  deleteAluguelByIdR4 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Aluguel,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityAluguel,
                  Aluguel.deleteAluguelByIdR5
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
7ecd195ec5beba9ca6be24f90fe110b1
  deleteAluguelByIdR5 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
1a10d685fe0a280ef44e7bd131948e78
  getAluguelByIdR ::
    Foundation.AluguelId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getAluguelByIdR1
                  `cast`
                (<Foundation.AluguelId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
acd496489d59f822f47772b9d4ba04f4
  getAluguelByIdR1 ::
    Foundation.AluguelId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (aluguelId :: Foundation.AluguelId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistApp1
                        @ Foundation.Aluguel
                        (Aluguel.getAluguelByIdR3 aluguelId)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Foundation.Aluguel>_N)_R
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  Foundation.$fToJSONAluguel_$ctoJSON ipv1)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
43501d17c0f618b038ba7a6860b0f2f4
  getAluguelByIdR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "resp"#) -}
2689d0ad182558524a7ae4df2a82fef4
  getAluguelByIdR3 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Aluguel
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         Foundation.Aluguel
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.Aluguel
                   (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Aluguel.deleteAluguelByIdR4
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Aluguel>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
0a50bbe8d1babc2dde014506710e7353
  getBuscarAluguelByDateR ::
    Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getBuscarAluguelByDateR1
                  `cast`
                (<Data.Time.Calendar.Days.Day>_R
                 ->_R <Data.Time.Calendar.Days.Day>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
fe22173d4f18d32cab69d5bf38f757fa
  getBuscarAluguelByDateR1 ::
    Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: (\ (inicio :: Data.Time.Calendar.Days.Day)
                   (fim :: Data.Time.Calendar.Days.Day)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Foundation.Aluguel
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Aluguel.deleteAluguelByIdR4
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Aluguel>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Foundation.Aluguel
                             @ Data.Time.Calendar.Days.Day
                             Database.Persist.Class.PersistField.$fPersistFieldDay
                             Aluguel.getBuscarAluguelByDateR2
                               `cast`
                             (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                             (Data.Either.Left
                                @ Data.Time.Calendar.Days.Day
                                @ [Data.Time.Calendar.Days.Day]
                                inicio)
                             Database.Persist.Types.Base.Ge)
                          (GHC.Types.:
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                             (Database.Persist.Class.PersistEntity.Filter
                                @ Foundation.Aluguel
                                @ Data.Time.Calendar.Days.Day
                                Database.Persist.Class.PersistField.$fPersistFieldDay
                                Aluguel.getBuscarAluguelByDateR2
                                  `cast`
                                (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                                (Data.Either.Left
                                   @ Data.Time.Calendar.Days.Day
                                   @ [Data.Time.Calendar.Days.Day]
                                   fim)
                                Database.Persist.Types.Base.Le)
                             (GHC.Types.[]
                                @ (Database.Persist.Class.PersistEntity.Filter
                                     Foundation.Aluguel))))
                       (GHC.Types.[]
                          @ (Database.Persist.Class.PersistEntity.SelectOpt
                               Foundation.Aluguel))
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Foundation.Aluguel))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Foundation.Aluguel))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Foundation.Aluguel))>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel))
                             @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv1
                             (Database.Persist.Class.PersistQuery.selectList1
                                @ Foundation.Aluguel)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Foundation.Aluguel]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Aluguel]>_R)
                            ipv })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Foundation.Aluguel]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Aluguel]>_N))
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                                          case Aluguel.getBuscarAluguelByDateR_$sfoldlM_loop
                                                 ipv6
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Foundation.Aluguel)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Foundation.$fToJSONEntity5_$ctoJSON
                                                    ipv1)
                                                 0#
                                                 0#
                                                 ipv7
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds3 { (#,#) ipv8 ipv9 ->
                                          case ipv9 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          (# ipv10
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv11 #) } } } } } }) of ds2 { (#,#) ipv6 ipv7 ->
                                  case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
b33123eaa2a2f56553c8ad06120c85f9
  getBuscarAluguelByDateR2 ::
    Foundation.R:EntityFieldAlugueltyp Data.Time.Calendar.Days.Day
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Foundation.AluguelRetirada
                   @ Data.Time.Calendar.Days.Day
                   Aluguel.$s$WAluguelPrevisao2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Time.Calendar.Days.Day>_N <Data.Time.Calendar.Days.Day>_N)) -}
7f751d0e9943337a370949d973799c76
  getBuscarAluguelByDateR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
82820980f539f816081f2fcf971db04a
  getBuscarAluguelByLivroIdDateR ::
    Foundation.LivroId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getBuscarAluguelByLivroIdDateR1
                  `cast`
                (<Foundation.LivroId>_R
                 ->_R <Data.Time.Calendar.Days.Day>_R
                 ->_R <Data.Time.Calendar.Days.Day>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
7dac8c38cc5707325560ea4b750b79ab
  getBuscarAluguelByLivroIdDateR1 ::
    Foundation.LivroId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: (\ (livroid :: Foundation.LivroId)
                   (inicio :: Data.Time.Calendar.Days.Day)
                   (fim :: Data.Time.Calendar.Days.Day)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Foundation.Aluguel
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Aluguel.deleteAluguelByIdR4
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Aluguel>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Foundation.Aluguel
                             @ Data.Time.Calendar.Days.Day
                             Database.Persist.Class.PersistField.$fPersistFieldDay
                             Aluguel.getBuscarAluguelByDateR2
                               `cast`
                             (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                             (Data.Either.Left
                                @ Data.Time.Calendar.Days.Day
                                @ [Data.Time.Calendar.Days.Day]
                                inicio)
                             Database.Persist.Types.Base.Ge)
                          (GHC.Types.:
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                             (Database.Persist.Class.PersistEntity.Filter
                                @ Foundation.Aluguel
                                @ Data.Time.Calendar.Days.Day
                                Database.Persist.Class.PersistField.$fPersistFieldDay
                                Aluguel.getBuscarAluguelByDateR2
                                  `cast`
                                (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                                (Data.Either.Left
                                   @ Data.Time.Calendar.Days.Day
                                   @ [Data.Time.Calendar.Days.Day]
                                   fim)
                                Database.Persist.Types.Base.Le)
                             (GHC.Types.:
                                @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                                (Database.Persist.Class.PersistEntity.Filter
                                   @ Foundation.Aluguel
                                   @ Foundation.LivroId
                                   Foundation.$fPersistFieldKey4
                                   Aluguel.getBuscarAluguelByLivroIdDateR2
                                     `cast`
                                   (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Foundation.LivroId>_N)
                                   (Data.Either.Left
                                      @ Foundation.LivroId
                                      @ [Foundation.LivroId]
                                      livroid)
                                   Database.Persist.Types.Base.Eq)
                                (GHC.Types.[]
                                   @ (Database.Persist.Class.PersistEntity.Filter
                                        Foundation.Aluguel)))))
                       (GHC.Types.[]
                          @ (Database.Persist.Class.PersistEntity.SelectOpt
                               Foundation.Aluguel))
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Foundation.Aluguel))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Foundation.Aluguel))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Foundation.Aluguel))>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel))
                             @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv1
                             (Database.Persist.Class.PersistQuery.selectList1
                                @ Foundation.Aluguel)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Foundation.Aluguel]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Aluguel]>_R)
                            ipv })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Foundation.Aluguel]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Aluguel]>_N))
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                                          case Aluguel.getBuscarAluguelByLivroIdDateR_$sfoldlM_loop
                                                 ipv6
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Foundation.Aluguel)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Foundation.$fToJSONEntity5_$ctoJSON
                                                    ipv1)
                                                 0#
                                                 0#
                                                 ipv7
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds3 { (#,#) ipv8 ipv9 ->
                                          case ipv9 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          (# ipv10
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv11 #) } } } } } }) of ds2 { (#,#) ipv6 ipv7 ->
                                  case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
76622d542697769e3e0dc5477b364eb9
  getBuscarAluguelByLivroIdDateR2 ::
    Foundation.R:EntityFieldAlugueltyp Foundation.LivroId
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Foundation.AluguelLivro
                   @ Foundation.LivroId
                   Aluguel.$s$WAluguelLivro2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.Livro>_N <Database.Persist.Class.PersistEntity.Key
                                                              Foundation.Livro>_N)) -}
523997b1ef10c4adda451a765d3d64f9
  getBuscarAluguelByLivroIdDateR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
1617326f4b72960503d610a2d1717bc9
  getBuscarAluguelByLivroIdR ::
    Foundation.LivroId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getBuscarAluguelByLivroIdR1
                  `cast`
                (<Foundation.LivroId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
40a1e422345412b6c311f318ac385c12
  getBuscarAluguelByLivroIdR1 ::
    Foundation.LivroId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (livroid :: Foundation.LivroId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Foundation.Aluguel
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Aluguel.deleteAluguelByIdR4
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Aluguel>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Foundation.Aluguel
                             @ Foundation.LivroId
                             Foundation.$fPersistFieldKey4
                             Aluguel.getBuscarAluguelByLivroIdDateR2
                               `cast`
                             (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Foundation.LivroId>_N)
                             (Data.Either.Left
                                @ Foundation.LivroId
                                @ [Foundation.LivroId]
                                livroid)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Aluguel)))
                       Aluguel.getBuscarAluguelByLivroIdR2
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Foundation.Aluguel))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Foundation.Aluguel))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Foundation.Aluguel))>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel))
                             @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv1
                             (Database.Persist.Class.PersistQuery.selectList1
                                @ Foundation.Aluguel)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Foundation.Aluguel]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Aluguel]>_R)
                            ipv })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Foundation.Aluguel]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Aluguel]>_N))
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                                          case Aluguel.getBuscarAluguelByLivroIdR_$sfoldlM_loop
                                                 ipv6
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Foundation.Aluguel)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Foundation.$fToJSONEntity5_$ctoJSON
                                                    ipv1)
                                                 0#
                                                 0#
                                                 ipv7
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds3 { (#,#) ipv8 ipv9 ->
                                          case ipv9 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          (# ipv10
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv11 #) } } } } } }) of ds2 { (#,#) ipv6 ipv7 ->
                                  case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
784055ca3570ab927439f355a690eb2d
  getBuscarAluguelByLivroIdR2 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Aluguel]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Aluguel)
                   Aluguel.getBuscarAluguelByLivroIdR3
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Aluguel))) -}
b59250735f60f697b4bd60f703ea92be
  getBuscarAluguelByLivroIdR3 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Aluguel
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Desc
                   @ Foundation.Aluguel
                   @ Data.Time.Calendar.Days.Day
                   Aluguel.getBuscarAluguelByDateR2
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)) -}
961e74ed37bdb5d80a5fe66aeb95a3f7
  getBuscarAluguelByLivroIdR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
b7f8d2bde9d22bbeddbbf625b8f9e8fa
  getBuscarAluguelByUsuarioIdDateR ::
    Foundation.UsuarioId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getBuscarAluguelByUsuarioIdDateR1
                  `cast`
                (<Foundation.UsuarioId>_R
                 ->_R <Data.Time.Calendar.Days.Day>_R
                 ->_R <Data.Time.Calendar.Days.Day>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
7653c4e33d64f199c49775e793a3f7fd
  getBuscarAluguelByUsuarioIdDateR1 ::
    Foundation.UsuarioId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: (\ (usuarioId :: Foundation.UsuarioId)
                   (inicio :: Data.Time.Calendar.Days.Day)
                   (fim :: Data.Time.Calendar.Days.Day)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Foundation.Aluguel
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Aluguel.deleteAluguelByIdR4
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Aluguel>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Foundation.Aluguel
                             @ Data.Time.Calendar.Days.Day
                             Database.Persist.Class.PersistField.$fPersistFieldDay
                             Aluguel.getBuscarAluguelByDateR2
                               `cast`
                             (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                             (Data.Either.Left
                                @ Data.Time.Calendar.Days.Day
                                @ [Data.Time.Calendar.Days.Day]
                                inicio)
                             Database.Persist.Types.Base.Ge)
                          (GHC.Types.:
                             @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                             (Database.Persist.Class.PersistEntity.Filter
                                @ Foundation.Aluguel
                                @ Data.Time.Calendar.Days.Day
                                Database.Persist.Class.PersistField.$fPersistFieldDay
                                Aluguel.getBuscarAluguelByDateR2
                                  `cast`
                                (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                                (Data.Either.Left
                                   @ Data.Time.Calendar.Days.Day
                                   @ [Data.Time.Calendar.Days.Day]
                                   fim)
                                Database.Persist.Types.Base.Le)
                             (GHC.Types.:
                                @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                                (Database.Persist.Class.PersistEntity.Filter
                                   @ Foundation.Aluguel
                                   @ Foundation.UsuarioId
                                   Foundation.$fPersistFieldKey6
                                   Aluguel.getBuscarAluguelByUsuarioIdDateR2
                                     `cast`
                                   (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Foundation.UsuarioId>_N)
                                   (Data.Either.Left
                                      @ Foundation.UsuarioId
                                      @ [Foundation.UsuarioId]
                                      usuarioId)
                                   Database.Persist.Types.Base.Eq)
                                (GHC.Types.[]
                                   @ (Database.Persist.Class.PersistEntity.Filter
                                        Foundation.Aluguel)))))
                       (GHC.Types.[]
                          @ (Database.Persist.Class.PersistEntity.SelectOpt
                               Foundation.Aluguel))
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Foundation.Aluguel))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Foundation.Aluguel))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Foundation.Aluguel))>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel))
                             @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv1
                             (Database.Persist.Class.PersistQuery.selectList1
                                @ Foundation.Aluguel)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Foundation.Aluguel]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Aluguel]>_R)
                            ipv })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Foundation.Aluguel]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Aluguel]>_N))
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                                          case Aluguel.getBuscarAluguelByUsuarioIdDateR_$sfoldlM_loop
                                                 ipv6
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Foundation.Aluguel)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Foundation.$fToJSONEntity5_$ctoJSON
                                                    ipv1)
                                                 0#
                                                 0#
                                                 ipv7
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds3 { (#,#) ipv8 ipv9 ->
                                          case ipv9 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          (# ipv10
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv11 #) } } } } } }) of ds2 { (#,#) ipv6 ipv7 ->
                                  case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
f914a4d882c9f670bc2f93080fb43c29
  getBuscarAluguelByUsuarioIdDateR2 ::
    Foundation.R:EntityFieldAlugueltyp Foundation.UsuarioId
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.AluguelUsuario
                   @ Foundation.UsuarioId
                   Aluguel.$s$WAluguelUsuario2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Foundation.Usuario>_N <Database.Persist.Class.PersistEntity.Key
                                                                Foundation.Usuario>_N)) -}
9d8315e5b82aad595202460a3fdc756d
  getBuscarAluguelByUsuarioIdDateR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
951fe6e15fcc7b91aced8f14690ee6e3
  getBuscarAluguelByUsuarioIdR ::
    Foundation.UsuarioId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.getBuscarAluguelByUsuarioIdR1
                  `cast`
                (<Foundation.UsuarioId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
e4ba307686b8ef12aba37fa8cc96265a
  getBuscarAluguelByUsuarioIdR1 ::
    Foundation.UsuarioId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (usuarioId :: Foundation.UsuarioId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Foundation.Aluguel
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Aluguel.deleteAluguelByIdR4
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Foundation.Aluguel>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                          @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Foundation.Aluguel)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Foundation.Aluguel
                             @ Foundation.UsuarioId
                             Foundation.$fPersistFieldKey6
                             Aluguel.getBuscarAluguelByUsuarioIdDateR2
                               `cast`
                             (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Foundation.UsuarioId>_N)
                             (Data.Either.Left
                                @ Foundation.UsuarioId
                                @ [Foundation.UsuarioId]
                                usuarioId)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter
                                  Foundation.Aluguel)))
                       Aluguel.getBuscarAluguelByLivroIdR2
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Foundation.Aluguel))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Foundation.Aluguel))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Foundation.Aluguel))>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel))
                             @ [Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv1
                             (Database.Persist.Class.PersistQuery.selectList1
                                @ Foundation.Aluguel)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Aluguel)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Foundation.Aluguel]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Aluguel]>_R)
                            ipv })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Foundation.Aluguel]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Foundation.Aluguel]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Aluguel]>_N))
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv2 ipv3 ipv4 ipv5 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                                          case Aluguel.getBuscarAluguelByUsuarioIdR_$sfoldlM_loop
                                                 ipv6
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Foundation.Aluguel)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Foundation.$fToJSONEntity5_$ctoJSON
                                                    ipv1)
                                                 0#
                                                 0#
                                                 ipv7
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds3 { (#,#) ipv8 ipv9 ->
                                          case ipv9 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          (# ipv10
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv11 #) } } } } } }) of ds2 { (#,#) ipv6 ipv7 ->
                                  case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv }) -}
8cd5b5322dc647ed7d47151edf4aa626
  getBuscarAluguelByUsuarioIdR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
69017fde0211595e2ffe0a657d16ccaa
  optionsAluguelByIdR ::
    Foundation.AluguelId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.AluguelId) -> Aluguel.optionsAluguelByIdR1) -}
fc705bbfbd453342283f32b2563d938f
  optionsAluguelByIdR1 :: Foundation.Handler ()
  {- Unfolding: (Funcs.anyOriginIn Aluguel.optionsAluguelByIdR2) -}
4583348209fffa93716647546ce0a990
  optionsAluguelByIdR2 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.OPTIONS
                   Aluguel.optionsAluguelByIdR3) -}
013d6561b194d36139e72998acf82d19
  optionsAluguelByIdR3 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.GET
                   Aluguel.optionsAluguelByIdR4) -}
46fa08e91af3a2d44d66f1404329ede2
  optionsAluguelByIdR4 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.DELETE
                   (GHC.Types.[] @ Funcs.HttpMethod)) -}
90d71975bc9147cf4bf1ce083346fdae
  optionsAluguelR :: Foundation.Handler ()
  {- Unfolding: (Funcs.anyOriginIn Aluguel.optionsAluguelR1) -}
7fabd23e0247082ec97ce5db922a06cf
  optionsAluguelR1 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.OPTIONS
                   Aluguel.optionsAluguelR2) -}
37a54ba18aae7d4a271d8c0430620106
  optionsAluguelR2 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.POST
                   (GHC.Types.[] @ Funcs.HttpMethod)) -}
191f5237d531a0fd4d2498106c8ee4eb
  optionsBuscarAluguelByDateR ::
    Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day -> Foundation.Handler ()
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Data.Time.Calendar.Days.Day)
                   (ds1 :: Data.Time.Calendar.Days.Day) ->
                 Aluguel.optionsBuscarAluguelByDateR1) -}
c88d078856ffee50556d878be87f987b
  optionsBuscarAluguelByDateR1 :: Foundation.Handler ()
  {- Unfolding: (Funcs.anyOriginIn
                   Aluguel.optionsBuscarAluguelByDateR2) -}
f871134f5c27130fde6a0a4228760e95
  optionsBuscarAluguelByDateR2 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.OPTIONS
                   Aluguel.optionsBuscarAluguelByDateR3) -}
fa4a484a2c21ca9aa13e9a86d1ac3a08
  optionsBuscarAluguelByDateR3 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.GET
                   (GHC.Types.[] @ Funcs.HttpMethod)) -}
f05e0f773a1eb93c119b3e15b3fc037b
  optionsBuscarAluguelByLivroIdDateR ::
    Foundation.LivroId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Foundation.LivroId)
                   (ds1 :: Data.Time.Calendar.Days.Day)
                   (ds2 :: Data.Time.Calendar.Days.Day) ->
                 Aluguel.optionsBuscarAluguelByDateR1) -}
3556c66adebb76317a27ce89b4a0e060
  optionsBuscarAluguelByLivroIdR ::
    Foundation.LivroId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.LivroId) ->
                 Aluguel.optionsBuscarAluguelByDateR1) -}
18d359a1ab846b4c6d790f1f9c0444d5
  optionsBuscarAluguelByUsuarioIdDateR ::
    Foundation.UsuarioId
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Calendar.Days.Day
    -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Foundation.UsuarioId)
                   (ds1 :: Data.Time.Calendar.Days.Day)
                   (ds2 :: Data.Time.Calendar.Days.Day) ->
                 Aluguel.optionsBuscarAluguelByDateR1) -}
356babd57720c97e4b549da19742be1d
  optionsBuscarAluguelByUsuarioIdR ::
    Foundation.UsuarioId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.UsuarioId) ->
                 Aluguel.optionsBuscarAluguelByDateR1) -}
f0ddcabae4812efb04ce32e0c0fbb6da
  optionsDevolucaoAluguelByIdR ::
    Foundation.AluguelId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.AluguelId) ->
                 Aluguel.optionsDevolucaoAluguelByIdR1) -}
1a8febdbad1278beff869fe1917c36b7
  optionsDevolucaoAluguelByIdR1 :: Foundation.Handler ()
  {- Unfolding: (Funcs.anyOriginIn
                   Aluguel.optionsDevolucaoAluguelByIdR2) -}
2fbcbda07d089436a5e745dc744479a5
  optionsDevolucaoAluguelByIdR2 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.OPTIONS
                   Aluguel.optionsDevolucaoAluguelByIdR3) -}
56c5e59dc1d100b8db17edffb097a14b
  optionsDevolucaoAluguelByIdR3 :: [Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Funcs.HttpMethod
                   Funcs.PATCH
                   (GHC.Types.[] @ Funcs.HttpMethod)) -}
d2f6a23013901ea4fd11b8e9090a3b92
  optionsRenovacaoAluguelByIdR ::
    Foundation.AluguelId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.AluguelId) ->
                 Aluguel.optionsDevolucaoAluguelByIdR1) -}
a8a3d823a201aa188690b0e4e70e5d5a
  optionsSaidaAluguelByIdR ::
    Foundation.AluguelId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.AluguelId) ->
                 Aluguel.optionsDevolucaoAluguelByIdR1) -}
5c4c5233087c5db8747e939686f5f1d8
  patchDevolucaoAluguelByIdR ::
    Foundation.AluguelId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.patchDevolucaoAluguelByIdR1
                  `cast`
                (<Foundation.AluguelId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
eb070a34e20a2ff447aa9d7b77d768b9
  patchDevolucaoAluguelByIdR1 ::
    Foundation.AluguelId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (aluguelId :: Foundation.AluguelId)
                   (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Time.Clock.CTimeval.getCTimeval1
                        s of ds { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cupdate
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Foundation.Aluguel
                           (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                              @ Foundation.App)
                           Aluguel.deleteAluguelByIdR4
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity
                                 Foundation.Aluguel>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           aluguelId
                           (GHC.Types.:
                              @ (Database.Persist.Class.PersistEntity.Update Foundation.Aluguel)
                              (Database.Persist.Class.PersistEntity.Update
                                 @ Foundation.Aluguel
                                 @ (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
                                 Aluguel.$s$fPersistFieldMaybe
                                 Aluguel.patchDevolucaoAluguelByIdR2
                                   `cast`
                                 (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <GHC.Base.Maybe
                                                                                    Data.Time.Calendar.Days.Day>_N)
                                 (GHC.Base.Just
                                    @ Data.Time.Calendar.Days.Day
                                    (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime
                                            (Data.Time.Clock.POSIX.getCurrentTime2
                                               ipv1) of ww { (#,#) ww1 ww2 ->
                                     ww1 }))
                                 Database.Persist.Types.Base.Assign)
                              (GHC.Types.[]
                                 @ (Database.Persist.Class.PersistEntity.Update
                                      Foundation.Aluguel))))
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        r
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Aluguel.deleteAluguelByIdR2
                   ipv2 } }) -}
bf8b4763857565b42d0e0a4e9f08225e
  patchDevolucaoAluguelByIdR2 ::
    Foundation.R:EntityFieldAlugueltyp
      (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Foundation.AluguelDevolucao
                   @ (GHC.Base.Maybe Data.Time.Calendar.Days.Day)
                   Aluguel.$s$WAluguelDevolucao2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Base.Maybe
                                                             Data.Time.Calendar.Days.Day>_N <GHC.Base.Maybe
                                                                                               Data.Time.Calendar.Days.Day>_N)) -}
2049cc21c2fefc358cfec62ea2355790
  patchRenovacaoAluguelByIdR ::
    Foundation.AluguelId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.patchRenovacaoAluguelByIdR1
                  `cast`
                (<Foundation.AluguelId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
f77961daca1afbcca5e6d5e38a0476d6
  patchRenovacaoAluguelByIdR1 ::
    Foundation.AluguelId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (aluguelId :: Foundation.AluguelId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistApp1
                        @ Foundation.Aluguel
                        (Aluguel.getAluguelByIdR3 aluguelId)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Foundation.Aluguel>_N)_R
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cupdate
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Foundation.Aluguel
                           (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                              @ Foundation.App)
                           Aluguel.deleteAluguelByIdR4
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity
                                 Foundation.Aluguel>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           aluguelId
                           (GHC.Types.:
                              @ (Database.Persist.Class.PersistEntity.Update Foundation.Aluguel)
                              Aluguel.patchRenovacaoAluguelByIdR4
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update Foundation.Aluguel)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.Aluguel
                                    @ Data.Time.Calendar.Days.Day
                                    Database.Persist.Class.PersistField.$fPersistFieldDay
                                    Aluguel.patchRenovacaoAluguelByIdR3
                                      `cast`
                                    (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <Data.Time.Calendar.Days.Day>_N)
                                    (case ipv1 of wild { Foundation.Aluguel ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                                     (GHC.Integer.Type.plusInteger
                                        ds6 `cast` (Data.Time.Calendar.Days.N:Day[0])
                                        Aluguel.patchRenovacaoAluguelByIdR2)
                                       `cast`
                                     (Sym (Data.Time.Calendar.Days.N:Day[0])) })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.[]
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.Aluguel)))))
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Aluguel.deleteAluguelByIdR2
                   ipv2 } }) -}
4d18cd04bb528eb81792b8e5a721bdfc
  patchRenovacaoAluguelByIdR2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (15) -}
f9e93f9a6de781f9d1c9a8bb65c86f52
  patchRenovacaoAluguelByIdR3 ::
    Foundation.R:EntityFieldAlugueltyp Data.Time.Calendar.Days.Day
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Foundation.AluguelPrevisao
                   @ Data.Time.Calendar.Days.Day
                   Aluguel.$s$WAluguelPrevisao2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Time.Calendar.Days.Day>_N <Data.Time.Calendar.Days.Day>_N)) -}
7721147908c3ee558daf2b80db812117
  patchRenovacaoAluguelByIdR4 ::
    Database.Persist.Class.PersistEntity.Update Foundation.Aluguel
  {- Unfolding: (Database.Persist.Class.PersistEntity.Update
                   @ Foundation.Aluguel
                   @ GHC.Types.Bool
                   Database.Persist.Class.PersistField.$fPersistFieldBool
                   Aluguel.patchRenovacaoAluguelByIdR5
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <GHC.Types.Bool>_N)
                   GHC.Types.True
                   Database.Persist.Types.Base.Assign) -}
d942f0af94f19c7e01bede60577d3bd5
  patchRenovacaoAluguelByIdR5 ::
    Foundation.R:EntityFieldAlugueltyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m8,
     Unfolding: (Foundation.AluguelRenovacao
                   @ GHC.Types.Bool
                   Aluguel.$s$WAluguelRenovacao2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
59529348dbaf18f24cdfe7741f8e7a24
  patchSaidaAluguelByIdR ::
    Foundation.AluguelId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.patchSaidaAluguelByIdR1
                  `cast`
                (<Foundation.AluguelId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
49ef6993e86a18ed333564767d4de1ed
  patchSaidaAluguelByIdR1 ::
    Foundation.AluguelId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (aluguelId :: Foundation.AluguelId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cupdate
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Foundation.Aluguel
                           (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                              @ Foundation.App)
                           Aluguel.deleteAluguelByIdR4
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity
                                 Foundation.Aluguel>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           aluguelId
                           Aluguel.patchSaidaAluguelByIdR2)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        eta
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Aluguel.deleteAluguelByIdR2
                   ipv }) -}
0f0f2fadf9d18cea60106fa50046a395
  patchSaidaAluguelByIdR2 ::
    [Database.Persist.Class.PersistEntity.Update Foundation.Aluguel]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.Update Foundation.Aluguel)
                   Aluguel.patchSaidaAluguelByIdR3
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Update
                           Foundation.Aluguel))) -}
6a421bd1ac4784b657815cd0c55bc314
  patchSaidaAluguelByIdR3 ::
    Database.Persist.Class.PersistEntity.Update Foundation.Aluguel
  {- Unfolding: (Database.Persist.Class.PersistEntity.Update
                   @ Foundation.Aluguel
                   @ GHC.Types.Bool
                   Database.Persist.Class.PersistField.$fPersistFieldBool
                   Aluguel.patchSaidaAluguelByIdR4
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldAlugueltyp0[0]) <GHC.Types.Bool>_N)
                   GHC.Types.True
                   Database.Persist.Types.Base.Assign) -}
360cf8e93817badece27ae5c03cf1d5d
  patchSaidaAluguelByIdR4 ::
    Foundation.R:EntityFieldAlugueltyp GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Foundation.AluguelSaida
                   @ GHC.Types.Bool
                   Aluguel.$s$WAluguelRenovacao2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Bool>_N <GHC.Types.Bool>_N)) -}
822ffa7f0630c6cea3ae722bdd1d8919
  postAluguelR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Aluguel.postAluguelR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
4086ea15336137a99da56c0e2b6ccccf
  postAluguelR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Aluguel.postAluguelR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Foundation.Aluguel>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Foundation.Aluguel>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Aluguel)
                        (Aluguel.postAluguelR2 ipv1)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Database.Persist.Class.PersistEntity.Key Foundation.Aluguel>_N)_R
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Aluguel.getAluguelByIdR2,
                                  case ipv3
                                         `cast`
                                       (Trans
                                            (Foundation.D:R:KeyAluguel0[0])
                                            (Trans
                                                 (Foundation.N:R:KeyAluguel[0])
                                                 (Trans
                                                      (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                      (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild { GHC.Int.I64# x# ->
                                  case GHC.Integer.Type.smallInteger x# of dt1 { DEFAULT ->
                                  Data.Aeson.Types.Internal.Number
                                    (Data.Scientific.Scientific dt1 0#) } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status201
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv2 } }) -}
7e8620918de028b45acf9e414bb9b7bc
  postAluguelR2 ::
    Foundation.Aluguel
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Aluguel)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Foundation.Aluguel
                   (Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Aluguel.deleteAluguelByIdR4
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Aluguel>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendAluguel[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
64ced89161b7b3b1ff0ac086c7fe1d04
  postAluguelR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Foundation.Aluguel
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Foundation.Aluguel
                   (Aluguel.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Foundation.$fFromJSONAluguel) -}
"SPEC/Aluguel $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                     ($dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Aluguel.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Aluguel $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                             ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                              GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Aluguel.$s$fMonadHandlerHandlerT @ site
"SPEC/Aluguel $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                      ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT
      @ site
"SPEC/Aluguel $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                             ($dMonad :: GHC.Base.Monad
                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadHandlerT_$cfail
      @ site
"SPEC/Aluguel $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Aluguel $fMonadIOHandlerT_$cliftIO @ IO _" [ALWAYS] forall @ site
                                                                 ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cliftIO @ GHC.Types.IO
                                              @ site
                                              $dMonadIO
  = Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cliftIO
      @ site
"SPEC/Aluguel $fMonadIOHandlerT_$cp1MonadLogger @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cp1MonadLogger @ GHC.Types.IO
                                                     @ site
                                                     $dMonadIO
  = Aluguel.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT_$cp1MonadLogger
      @ site
"SPEC/Aluguel $fPersistFieldMaybe @ Day" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                              Data.Time.Calendar.Days.Day)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe @ Data.Time.Calendar.Days.Day
                                                          $dPersistField
  = Aluguel.$s$fPersistFieldMaybe
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

